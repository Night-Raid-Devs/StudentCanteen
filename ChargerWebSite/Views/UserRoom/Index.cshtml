
@{
    Layout = null;
}
@model Infocom.Chargers.BackendCommon.CustomerData
<!DOCTYPE html>

<html>
<head>
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <link href="~/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/MyScript")
    @Styles.Render("~/w3style/css")
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <meta name="viewport" content="width=device-width" />
    <title>Личный кабинет</title>
</head>
<body class="w3-light-grey">

    <nav class="navbar navbar-default" style="border-radius:0;">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand">Личный кабинет</a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="@Url.Action("LogOut","UserRoom")"><span class="glyphicon glyphicon-log-out"></span> Выйти</a></li>
                </ul>
            </div>
        </div>
    </nav>



    <!-- Page Container -->
    <div class="w3-content w3-margin-top" style="max-width:1500px;">

        <div class="modal fade" id="dialog">
            <div class="modal-dialog">
                <div class="modal-content" id="content">
                </div>
            </div>
        </div>

        <!-- The Grid -->
        <div class="w3-row-padding">
            <!-- Left Column -->
            <div id="leftColumn" class="col-sm-4 col-md-4 col-lg-4">
                <div class="w3-white w3-text-grey w3-card-4">
                    <div class="w3-display-container" style="text-align:center">
                        <img src="~/Content/images/ugv-user-male.png" style="width:50%; margin-top:10px" alt="Avatar">
                        @if (ViewBag.CustomerType == true)
                        {<h3 id="UserName" style="text-align:center">@Model.FirstName @Model.LastName</h3>}

                        @if (ViewBag.CustomerType == false)
                        {<h3 id="OrganizationName" style="text-align:center">@Model.OrganizationName</h3> }
                    </div>
                    <div class="w3-container">
                        @using (Html.BeginForm("EditUserInfo", "UserRoom"))
                        {
                            <div class="hover-blue-opacity" id="StartEditButton" style="text-align:right; margin:5px,5px,5px,5px">
                                <i id="cog" class="fa fa-2x fa-cog hover-green" onclick="ShowEditMainInfo(@ViewBag.CustomerType)" onmouseenter="document.getElementById('cog').className = 'fa fa-2x fa-cog fa-spin'" onmouseleave="document.getElementById('cog').className = 'fa fa-2x fa-cog'"></i>
                            </div>

                            <button type="submit" id="OkEditButton" class="w3-margin-top w3-right hover-green" style="display:none; border:none; background-color:#ffffff; color:black; padding: 0px; margin: 0px;">
                                <span class="fa-stack">
                                    <i class="fa fa-square-o fa-stack-2x"></i>
                                    <i class="fa fa-check fa-stack-1x"></i>
                                </span>
                            </button>
                            <div id="CancelEditButton" class="w3-margin-top w3-right hover-red" style="display:none; border:none; color:black;" onclick="CloseEditMainInfo(@ViewBag.CustomerType);">
                                <span class="fa-stack">
                                    <i class="fa fa-square-o fa-stack-2x"></i>
                                    <i class="fa fa-times fa-stack-1x"></i>
                                </span>
                            </div>

                            if (!ViewBag.CustomerType)
                            {
                                <div id="ChangeOrganizationNameBlock" style="display:none">
                                    <h5 style="text-align:left; margin-top:30px; color:#7095b7">Имя Организации</h5>
                                    <input name="NewOrganizationName" id="NewOrganizationName" type="text" class="form-control input-sm" value=@Model.OrganizationName.ToString() />
                                    <hr />
                                </div>
                            }

                            if (ViewBag.CustomerType)
                            {
                                <div id="ChangeFirstNameBlock" style="display:none">
                                    <h5 style="text-align:left; margin-top:30px; color:#7095b7">Имя</h5>
                                    <input name="NewFirstName" id="NewFirstName" type="text" class="form-control input-sm" value=@Model.FirstName.ToString() />
                                    <hr />
                                </div>

                                <div id="ChangeLastNameBlock" style="display:none">
                                    <h5 style="text-align:left; color:#7095b7">Фамилия</h5>
                                    <input name="NewLastName" id="NewLastName" type="text" class="form-control input-sm" value=@Model.LastName.ToString() />
                                    <hr />
                                </div>
                            }

                            <h5 style="text-align:left; color:#7095b7">E-mail</h5>
                            <input name="NewEmail" id="NewEmail" type="email" class="form-control input-sm" value=@Model.Email style="display:none">
                            <h5 id="ShowEmail"><i class="w3-margin-right fa fa-at" style="color:#7095b7"></i>@Model.Email</h5>
                            <hr />

                            <h5 style="text-align:left;color:#7095b7">Телефон</h5>
                            <input name="NewPhone" id="NewPhone" type="text" class="form-control input-sm" value=@Model.Phone pattern="[0-9]{12}" title="Формат 380505550505" style="display:none">
                            <h5 id="ShowPhone"><i class="w3-margin-right glyphicon glyphicon-phone" style="color:#7095b7"></i>@Model.Phone</h5>
                            <hr />

                            if (ViewBag.CustomerType)
                            {
                                <h5 style="text-align:left;color:#7095b7">Дата рождения</h5>
                                <input name="newDateTime" id="newDateTime" type="date" class="form-control input-sm" value="@Convert.ToDateTime(Model.BirthDate).ToString("yyyy-MM-dd")" style="display:none">
                                <h5 id="ShowDateTime"><i class="w3-margin-right glyphicon glyphicon-calendar" style="color:#7095b7"></i>@Convert.ToDateTime(Model.BirthDate).ToString("dd MMMM yyyy")</h5>
                                <hr />

                                <h5 style="text-align:left;color:#7095b7">Пол</h5>
                                <div id="NewSexBlock" style="display:none">
                                    <select class="form-control input-sm" id="NewSex" name="NewSex" value=@Model.Sex>
                                        @if (Model.Sex == null)
                                        {
                                            <option value="0">Не указано</option>
                                            <option value="1">Мужской</option>
                                            <option value="2">Женский</option>
                                        }
                                        @if (Model.Sex == true)
                                        {
                                            <option value="1">Мужской</option>
                                            <option value="2">Женский</option>
                                            <option value="0">Не указано</option>
                                        }
                                        @if (Model.Sex == false)
                                        {
                                            <option value="2">Женский</option>
                                            <option value="1">Мужской</option>
                                            <option value="0">Не указано</option>
                                        }
                                    </select>
                                </div>
                                if (ViewBag.Sex != null)
                                {
                                <h5 id="ShowSex"><i class="w3-margin-right fa fa-venus-mars" style="color:#7095b7"></i>@ViewBag.Sex</h5>
                                }
                                <hr />
                            }

                            <div id="ChangeCountryBlock" style="display:none">
                                <h6 style="text-align:left;color:#7095b7">Страна</h6>
                                <select class="form-control input-sm" id="NewCountry" name="NewCountry" value='@(Model.Country == null ? "" : Model.Country.ToString())'>
                                    @if (Model.Country == null)
                                    {
                                        <option value="null">Не указано</option>
                                    }
                                    <option value="Украина">Украина</option>
                                    <option value="Россия">Россия</option>
                                    <option value="Польша">Польша</option>
                                    <option value="Германия">Германия</option>
                                </select>
                                <hr />
                            </div>
                            if (Model.Country != null)
                            {
                                <div id="ShowCountryBlock">
                                    <h5 style="text-align:left;color:#7095b7">Страна</h5>
                                    <h5><i class="w3-margin-right glyphicon glyphicon-globe" style="color:#7095b7"></i>@Model.Country</h5>
                                    <hr />
                                </div>
                            }

                            <div id="ChangeTownBlock" style="display:none">
                                <h5 style="text-align:left;color:#7095b7">Город</h5>
                                <select class="form-control input-sm" id="NewTown" name="NewTown" value='@(Model.Town == null ? "" : Model.Town.ToString())'>
                                    @if (Model.Town == null)
                                    {
                                        <option value="null">Не указано</option>
                                    }
                                    <option value="Запорожье">Запорожье</option>
                                    <option value="Днепр">Днепр</option>
                                    <option value="Киев">Киев</option>
                                    <option value="Харьков">Харьков</option>
                                </select>
                                <hr />
                            </div>
                            if (Model.Town != null)
                            {
                                <div id="ShowTownBlock">
                                    <h5 style="text-align:left;color:#7095b7">Город</h5>
                                    <h5><i class="w3-margin-right glyphicon glyphicon-map-marker" style="color:#7095b7"></i>@Model.Town</h5>
                                    <hr />
                                </div>
                            }

                            <div id="ChangeAddressBlock" style="display:none">
                                <h5 style="text-align:left;color:#7095b7">Адрес</h5>
                                <input name="NewAddress" id="NewAddress" type="text" class="form-control input-sm" value="@(Model.Address == null ? "" : Model.Address.ToString())"/>
                                <hr />
                            </div>

                            if (Model.Address != null)
                            {
                                <div id="ShowAddressBlock">
                                    <h5 style="text-align:left;color:#7095b7">Адрес</h5>
                                    <h5><i class="w3-margin-right glyphicon glyphicon glyphicon-home" style="color:#7095b7"></i>@Model.Address</h5>
                                    <hr />
                                </div>
                            }

                            <div id="ChangePostIndexBlock" style="display:none">
                                <h5 style="text-align:left; color:#7095b7">Индекс</h5>
                                <input name="NewPostIndex" id="NewPostIndex" type="text" class="form-control input-sm" value='@(Model.PostIndex == null ? "" : Model.PostIndex.ToString())'/>
                                <hr />
                            </div>
                            if (Model.PostIndex != null)
                            {
                                <div id="ShowPostIndexBlock">
                                    <h5 style="text-align:left;color:#7095b7">Индекс</h5>
                                    <h5><i class="w3-margin-right glyphicon glyphicon-envelope" style="color:#7095b7"></i>@Model.PostIndex</h5>
                                </div>
                            }
                            if (ViewBag.Result != null)
                            {
                                <script>

                                    $("StartEditButton").click();
                                    setTimeout(Click, 10);
                                </script>
                                <div id="ErrorMessage" class="alert alert-danger">@ViewBag.Result</div>
                            }
                        }
                    </div>
                </div>
                <br>
            </div>
            <!-- End Left Column -->
            <!-- Right Column -->
            <div class="container-fluid">
                <div class="col-sm-8 col-md-8 col-lg8">


                    <div id="RightSideNav" class="sidenav w3-white w3-text-grey w3-card-4">
                        <div class="col-xs-12 col-md-12 col-lg-12">
                            <span href="javascript:void(0)" style="float:right;font-size:36px;" class="fa fa-close hover-blue-opacity" onclick="closeNav()"></span>
                            <lable style="font-size:26px; color:#7095b7; text-align:right">Фильтр</lable>
                            <hr />
                            <lable class="fa fa-cloud" style="font-size:20px;color:#7095b7"> Сеть заправок</lable>
                            <div id="FiltersForm">
                                <div class="radio">
                                    <label><input type="radio" checked="checked" id="AllWeb" name="ChargeWeb" />Все</label>
                                </div>

                                <div class="radio">
                                    <label><input type="radio" id="OnlyUGV" name="ChargeWeb">Только UGV-Shneider</label>
                                </div>

                                <hr />
                                <lable class="fa fa-map-marker fa-2x" style="font-size:20px;color:#7095b7"> Статус заправки</lable>

                                <div class="radio">
                                    <label><input type="radio" checked="checked" id="AllStationsStatus" name="ChargeStatus" />Все</label>
                                </div>

                                <div class="radio">
                                    <label><input type="radio" id="OnlyAvailable" name="ChargeStatus">Только доступные</label>
                                </div>

                                <hr />
                                <lable class="fa fa-plug" style="font-size:20px;color:#7095b7"> Типы портов</lable>

                                <div class="checkbox">
                                    <label><input checked="checked" id="CCS" name="PortType" type="checkbox">CCS</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="CHAdeMO" name="PortType" type="checkbox">CHAdeMO</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="J1772" name="PortType" type="checkbox">J1772</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Nema1450" name="PortType" type="checkbox">Nema1450</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Nema515" name="PortType" type="checkbox">Nema515</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Nema520" name="PortType" type="checkbox">Nema520</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Shuko" name="PortType" type="checkbox">Shuko</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="TeslaSuper" name="PortType" type="checkbox">TeslaSuper</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Type2" name="PortType" type="checkbox">Type2</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Type3" name="PortType" type="checkbox">Type3</label>
                                </div>

                                <hr />
                                <lable class="fa fa-signal" style="font-size:20px;color:#7095b7"> Уровни</lable>

                                <div class="checkbox">
                                    <label><input checked="checked" id="Normal" name="ChargeLevel" type="checkbox">Normal</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="FastCharging" name="ChargeLevel" type="checkbox">FastCharging</label>
                                </div>

                                <div class="checkbox">
                                    <label><input checked="checked" id="SuperCharging" name="ChargeLevel" type="checkbox">SuperCharging</label>
                                </div>
                                <hr />
                                <button id="FiltersButton" class="btn btn-block" disabled="disabled" style="text-align:center; background-color:#fa9a33;" onclick="FindCharges()">Найти</button>
                            </div>
                        </div>
                    </div>

                    <!-- Map -->
                    <select class="form-control">
                        @*РЕАЛИЗОВАТЬ Ajax запрос на города*@
                        <option value="1">Киев</option>
                        <option value="2">Москва</option>
                        <option value="3">Варшава</option>
                        <option value="4">Берлин</option>
                        <option value="5">Париж</option>
                    </select>

                    <button id="filterBtn" type="button" class="btn btn-default" style="position:absolute;top:0;right:15px;font-size:16px; background-color:#7095b7; color:white" onclick="openNav()">
                        <span class="fa fa-filter" aria-hidden="true">Фильтр</span>
                    </button>

                    <div class="map" id="map" style="width:100%;background:grey;margin-top:5px"></div>
                    <!-- Resize Right Column -->
                    <script>
                        var CardHeight = document.getElementById('leftColumn').clientHeight;
                        document.getElementById('map').style.height = String(CardHeight - 55) + "px";
                    </script>

                    <!-- Google Map Api (CreateMap) -->
                    <script type="text/javascript">
                            var AllStations = @Html.Raw(Json.Encode(ViewBag.AllStations));
                            var map = null;
                            var markers = [];
                            var lastMarker;
                            var lastMarkerUnselectImage;
                            var infowindow;
                            function initMap() {
                                var haightAshbury = { lat: 47.838800, lng: 35.10 };

                                map = new google.maps.Map(document.getElementById('map'), {
                                    zoom: 12,
                                    center: haightAshbury,
                                    mapTypeId: google.maps.MapTypeId.ROADMAP
                                });

                                if (navigator.geolocation) {
                                    navigator.geolocation.getCurrentPosition(function (position) {
                                        var currLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                                        new google.maps.Marker({
                                            title: 'Ваше местоположение',
                                            map: map,
                                            position: currLocation
                                            // добавить синюю точку как на навигаторе
                                        });
                                        map.setCenter(currLocation);

                                        // подгрузка OtherStation в точке местоположения
                                        $.ajax({
                                            url: '/UserRoom/UpdateOtherStations',
                                            type: 'POST',
                                            contentType: 'application/json',
                                            dataType: 'json',
                                            data: JSON.stringify({
                                                Latitude: position.coords.latitude,
                                                Longitude: position.coords.longitude
                                            }),
                                            success: function (newOtherStations) {
                                                for (var i = 0; i < newOtherStations.length; i++) {
                                                    addMarker(new google.maps.LatLng(newOtherStations[i].Position.Latitude, newOtherStations[i].Position.Longitude), false, newOtherStations[i]);
                                                }
                                            },
                                            error: function (response) {
                                                alert("Error");
                                            }
                                        })
                                    });
                                }

                                for (var i = 0; i < AllStations.length; i++) {
                                    addMarker(new google.maps.LatLng(AllStations[i].Latitude, AllStations[i].Longitude), true, AllStations[i]);
                                }

                                map.addListener('click', function () {
                                    if (lastMarker != null) {

                                        lastMarker.setIcon({
                                            url: lastMarkerUnselectImage,
                                            scaledSize: new google.maps.Size(48, 48)
                                        });

                                        lastMarker = null;
                                    }

                                    if (infowindow != null) {
                                        infowindow.close();
                                    }
                                })

                                google.maps.event.addListener(map, "dragend", function () {
                                    $.ajax({
                                        url: '/UserRoom/UpdateOtherStations',
                                        type: 'POST',
                                        contentType: 'application/json',
                                        dataType: 'json',
                                        data: JSON.stringify({
                                            Latitude: map.getCenter().lat(),
                                            Longitude: map.getCenter().lng()
                                        }),
                                        success: function (newOtherStations) {
                                            for (var i = 0; i < newOtherStations.length; i++) {
                                                addMarker(new google.maps.LatLng(newOtherStations[i].Position.Latitude, newOtherStations[i].Position.Longitude), false, newOtherStations[i]);
                                            }
                                        },
                                        error: function (response) {
                                            alert("UpdateOtherStation Error");
                                        }
                                    })
                                });
                            }

                            function addMarker(location, markerType, station) {
                                var marker = new google.maps.Marker();
                                $.ajax({
                                    url: '/UserRoom/GetMarkerImage',
                                    type: 'POST',
                                    dataType: "json",
                                    data: {
                                        id: JSON.stringify(station.Id),
                                        ourStation: JSON.stringify(markerType)
                                    },
                                    success: function (iconPath) {

                                        marker = new google.maps.Marker({
                                            position: location,
                                            animation: google.maps.Animation.DROP,
                                            icon: {
                                                url: iconPath[0],
                                                scaledSize: new google.maps.Size(48, 48)
                                            },
                                            map: map
                                        });


                                        marker.addListener('click', function () {
                                            map.panTo(marker.getPosition());

                                            $.ajax({
                                                url: '/UserRoom/GetMarkerImage',
                                                type: 'POST',
                                                dataType: "json",
                                                data: {
                                                    id: JSON.stringify(station.Id),
                                                    ourStation: JSON.stringify(markerType)
                                                },
                                                success: function (newiconPath) {

                                                    marker.setIcon({
                                                        url: newiconPath[1],
                                                        scaledSize: new google.maps.Size(48, 48)
                                                    });

                                                    if (lastMarker != null && lastMarker != marker) {

                                                        lastMarker.setIcon({
                                                            url: lastMarkerUnselectImage,
                                                            scaledSize: new google.maps.Size(48, 48)
                                                        });
                                                    }

                                                    lastMarker = marker;
                                                    lastMarkerUnselectImage = newiconPath[0];

                                                    if (markerType) {
                                                        var contentString =
                                                            '<div class="container" id="StationContent">' +
                                                            '<h5 style="color:#7095b7">Электрозаправка UGV-Shneider</h5>' +
                                                            'Телефон: ' + String(GetProp(station.Phone)) +
                                                            '<br/>' +
                                                            'Адрес: ' + String(GetProp(station.Address)) +
                                                            '<br/>' +
                                                            '<div style="text-align:center">' +
                                                            '<button class="btn btn-primary" style="background-color:#fa9a33" data-toggle="modal" onclick="OpenModal(' + String(GetProp(station.Id)) + ')">Подробнее</button>' +
                                                            '</div>' +
                                                            '</div>';

                                                        if (infowindow != null) {
                                                            infowindow.close();
                                                        }
                                                        infowindow = new google.maps.InfoWindow({
                                                            content: contentString
                                                        });
                                                        infowindow.open(map, marker);
                                                    }
                                                    else {
                                                        $.ajax({
                                                            url: "@Url.Content("/UserRoom/GetOtherStationInfo")",
                                                            type: 'GET',
                                                            dataType: "json",
                                                            data: {
                                                                PlaceId: station.PlaceId
                                                            },
                                                            success: function (OtherStation) {
                                                                var contentString =
                                                                    '<div class="container" id="OtherStationContent">' +
                                                                    '<h4 style="text-align:center">Электрозаправка</h4>' +
                                                                    '<h5 style="text-align:center">' + String(GetProp(OtherStation.Name)) + '</h5>' +
                                                                    'Телефон: ' + String(GetProp(OtherStation.Phone)) +
                                                                    '<br/>' +
                                                                    'Адрес: ' + String(GetProp(OtherStation.Address)) +
                                                                    '<br/>' +
                                                                    '<a href="' + String(GetProp(OtherStation.MapUrl)) + '" target="_blank">Посмотреть в Google Maps</a>' +
                                                                    '</div>';
                                                                if (infowindow != null) {
                                                                    infowindow.close();
                                                                }
                                                                infowindow = new google.maps.InfoWindow({
                                                                    content: contentString
                                                                });
                                                                infowindow.open(map, marker);
                                                            }
                                                        });

                                                    }
                                                },

                                                error: function (response) {
                                                    alert("Error getting newMarkerImage " + response);
                                                }
                                            });
                                        });
                                        markers.push(marker);
                                    },
                                    error: function (response) {
                                        alert("ErrorMarkerImage" + response);
                                    }
                                });

                            }

                            function OpenModal(id)
                            {
                                $.ajax({
                                    url: "@Url.Content("/UserRoom/GetStationInfo/")",
                                    type: 'GET',
                                    data: {
                                        Id:id
                                    },
                                    dataType: 'html',
                                    success: function (data) {
                                        $('#content').html(data);
                                        $('#dialog').modal('show');

                                    },
                                    error: function (response) {
                                        alert("OpenModal Error");
                                    }
                                })
                            }

                            function GetProp(prop) {
                                if (prop === undefined || prop === null) {
                                    return "Не указано";
                                }
                                else {
                                    return prop;
                                }
                            }

                            function clearMarkers() {
                                setMapOnAll(null);
                            }

                            function showMarkers() {
                                setMapOnAll(map);
                            }

                            function setMapOnAll(map) {
                                for (var i = 0; i < markers.length; i++) {
                                    markers[i].setMap(map);
                                }
                            }

                            function deleteMarkers() {
                                clearMarkers();
                                markers = [];
                            }
                    </script>
                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAEPGzLwvvtt5aCIu2QzO645E-Wlr1ESvg&callback=initMap"></script>

                    <!--end map-->
                </div>
            </div>
            <!-- End Grid -->
        </div>
        <!-- End Page Container -->
    </div>

    <!--GlobalVarForFilters-->
    <script type="text/javascript">
                            var FilterSettings = {
                                ChargeStatus: true,
                                ChargeWeb: true,
                                PortTypes: ["CCS", "CHAdeMO", "J1772", "Nema1450", "Nema515", "Nema520", "Shuko", "TeslaSuper", "Type2", "Type3"],
                                ChargeLevels: ["Normal", "FastCharging", "SuperCharging"]
                            };

                            function AllowAddStation(station, isOurStation)
                            {
                               
                                if (FilterSettings.ChargeWeb == false) //заправки сети UGV
                                {
                                    if (isOurStation == false) //чужая заправка
                                    {
                                        return false;
                                    }
                                }

                                if (FilterSettings.ChargeStatus == false) //только доступные заправки
                                {
                                    if (isOurStation)
                                    {
                                        if (station.GetStationStatus_Boolean == false)
                                        {
                                            return false;
                                        }
                                    }
                                }
                              
                                if (isOurStation) {
                                    var flag = false;
                                        for (var j = 0; j < station.Ports.length; j++)
                                        {
                                            if ((FilterSettings.PortTypes.indexOf(station.Ports[j].PortType) != -1))
                                            {
                                                flag = true;
                                            }
                                    }
                                    if (flag == false && station.Ports.length != 0)
                                            return false;
                                }

                                if (isOurStation) { 
                                    var flag = false;
                                    for (var j = 0; j < station.Ports.length; j++)
                                    {
                                        if ((FilterSettings.ChargeLevels.indexOf(station.Ports[j].Level) != -1))
                                        {
                                            flag = true;
                                        }
                                    }
                                    if (flag == false && station.Ports.length != 0)
                                        return false;
                                }

                                return true;
                            }
    </script>
    <!--EndGlobalVarForFilters-->

    <script type="text/javascript">
                            function handler(event) {
                                $('#FiltersButton').prop('disabled', false);
                                $('#FiltersButton').addClass("btn-primary");
                            }
                            var form = document.getElementById('FiltersForm')
                            form.addEventListener('change', handler)
    </script>

    <!--FindChargeScript-->
    <script type="text/javascript">
                            function FindCharges() {
                                $('#FiltersButton').prop('disabled', true);
                                $('#FiltersButton').removeClass("btn-primary");
                                deleteMarkers();

                                var ResultPortTypes = [];
                                var ResultChargeLevels = [];
                                var ResultChargeWeb;
                                var ResultChargeStatus;

                                var ChargeStatus = document.getElementById("AllStationsStatus");
                                var ChargeWeb = document.getElementById("AllWeb");
                                var PortTypes = document.getElementsByName("PortType");
                                var ChargeLevels = document.getElementsByName("ChargeLevel");
                                var currIndex = 0;
                                for (var i = 0; i < PortTypes.length; i++) {
                                    if (jQuery(PortTypes[i]).prop('checked')) {
                                        ResultPortTypes[currIndex] = (jQuery(PortTypes[i]).prop('id'));
                                        currIndex++;
                                    }

                                }

                                currIndex = 0;
                                for (var i = 0; i < ChargeLevels.length; i++) {
                                    if (jQuery(ChargeLevels[i]).prop('checked')) {
                                        ResultChargeLevels[currIndex] = (jQuery(ChargeLevels[i]).prop('id'));
                                        currIndex++;
                                    }
                                }

                                if (jQuery(ChargeWeb).prop('checked'))
                                    ResultChargeWeb = true;
                                else
                                    ResultChargeWeb = false;

                                if (jQuery(ChargeStatus).prop('checked'))
                                    ResultChargeStatus = true;
                                else
                                    ResultChargeStatus = false;


                                FilterSettings.ChargeLevels = ResultChargeLevels;
                                FilterSettings.PortTypes = ResultPortTypes;
                                FilterSettings.ChargeWeb = ResultChargeWeb;
                                FilterSettings.ChargeStatus = ResultChargeStatus;


                                for (var i = 0; i < AllStations.length; i++) {
                                    if (AllowAddStation(AllStations[i], true))
                                        addMarker(new google.maps.LatLng(AllStations[i].Latitude, AllStations[i].Longitude), true, AllStations[i]);
                                }

                                $.ajax({
                                    url: "@Url.Content("/UserRoom/GetOtherStationsFromHeshSet")",
                                    type: 'GET',
                                    dataType: "json",
                                    success: function (otherStations) {
                                        for (var i = 0; i < otherStations.length; i++)
                                            if (AllowAddStation(otherStations[i], false))
                                                addMarker(new google.maps.LatLng(otherStations[i].Position.Latitude, otherStations[i].Position.Longitude), false, otherStations[i]);
                                    },
                                    error: function () {
                                        console.log('Error Get Other Stations From HeshSet');
                                    }
                                });
                            }
    </script>
    <!--EndFindChargeScript-->


    <!-- SlideBarScript -->
    <script>
                            function openNav() {
                                var CardHeight = document.getElementById('leftColumn').clientHeight;
                                document.getElementById('RightSideNav').style.height = String(CardHeight - 20) + "px";
                                document.getElementById("RightSideNav").style.width = "250px";
                                var w = document.getElementById("map").clientWidth;
                                document.getElementById('map').style.width = String(w - 200) + "px";
                            }

                            function closeNav() {
                                document.getElementById("RightSideNav").style.width = "0";
                                var w = document.getElementById("map").clientWidth;
                                document.getElementById('map').style.width = String(w + 200) + "px";
                                document.getElementById('RightSideNav').style.height = "0";
                            }
    </script>
    <!-- EndSlideBarScript -->

    <script>
                            function ShowEditMainInfo(type) {
                                var StartEditButton = document.getElementById("StartEditButton").style.display = "none";
                                var OkEditButton = document.getElementById("OkEditButton").style.display = "block";
                                var CancelEditButton = document.getElementById("CancelEditButton").style.display = "block";

                                if (type) {
                                    try {
                                        var UserName = document.getElementById("UserName").style.display = "none";
                                        var ChangeFirstNameBlock = document.getElementById("ChangeFirstNameBlock").style.display = "block";
                                        var ChangeLastNameBlock = document.getElementById("ChangeLastNameBlock").style.display = "block";
                                    } catch (ex) { }
                                }
                                if (!type) {
                                    try {
                                        var OrganizationName = document.getElementById('OrganizationName').style.display = "none";
                                        var ChangeOrganizationNameBlock = document.getElementById('ChangeOrganizationNameBlock').style.display = "block";
                                    } catch (ex) { }
                                }

                                try {
                                    var ShowEmail = document.getElementById("ShowEmail").style.display = "none";
                                } catch (ex) { }
                                var NewEmail = document.getElementById("NewEmail").style.display = "block";

                                try {
                                    var ShowPhone = document.getElementById("ShowPhone").style.display = "none";
                                } catch (ex) { }
                                var NewPhone = document.getElementById("NewPhone").style.display = "block";

                                if (type) {
                                    try {
                                        var ShowDateTime = document.getElementById("ShowDateTime").style.display = "none";
                                    } catch (ex) { }
                                    var NewDateTime = document.getElementById("newDateTime").style.display = "block";

                                    try {
                                        var ShowSex = document.getElementById("ShowSex").style.display = "none";
                                    } catch (ex) { }
                                    var NewSexBlock = document.getElementById("NewSexBlock").style.display = "block";
                                }

                                try {
                                    var ShowCountryBlock = document.getElementById("ShowCountryBlock").style.display = "none";
                                } catch (ex) { }
                                var ChangeCountryBlock = document.getElementById("ChangeCountryBlock").style.display = "block";

                                try {
                                    var ShowTownBlock = document.getElementById("ShowTownBlock").style.display = "none";
                                } catch (ex) { }
                                var ChangeTownBlock = document.getElementById("ChangeTownBlock").style.display = "block";

                                try {
                                    var ShowAddressBlock = document.getElementById("ShowAddressBlock").style.display = "none";
                                } catch (ex) { }
                                var ChangeAddressBlock = document.getElementById("ChangeAddressBlock").style.display = "block";

                                try {
                                    var ShowPostIndexBlock = document.getElementById("ShowPostIndexBlock").style.display = "none";
                                } catch (ex) { }
                                var ChangePostIndexBlock = document.getElementById("ChangePostIndexBlock").style.display = "block";

                                var CardHeight = document.getElementById('leftColumn').clientHeight;
                                document.getElementById('map').style.height = String(CardHeight - 55) + "px";
                            }
                            function CloseEditMainInfo(type) {


                                var StartEditButton = document.getElementById("StartEditButton").style.display = "block";
                                var OkEditButton = document.getElementById("OkEditButton").style.display = "none";
                                var CancelEditButton = document.getElementById("CancelEditButton").style.display = "none";

                                if (type) {
                                    try {
                                        var UserName = document.getElementById("UserName").style.display = "block";
                                        var ChangeFirstNameBlock = document.getElementById("ChangeFirstNameBlock").style.display = "none";
                                        var ChangeLastNameBlock = document.getElementById("ChangeLastNameBlock").style.display = "none";
                                    } catch (ex) { }
                                }

                                if (!type) {
                                    try {
                                        var OrganizationName = document.getElementById('OrganizationName').style.display = "block";
                                        var ChangeOrganizationNameBlock = document.getElementById('ChangeOrganizationNameBlock').style.display = "none";
                                    } catch (ex) { }
                                }

                                try {
                                    var ShowEmail = document.getElementById("ShowEmail").style.display = "block";
                                } catch (ex) { }
                                var NewEmail = document.getElementById("NewEmail").style.display = "none";

                                try {
                                    var ShowPhone = document.getElementById("ShowPhone").style.display = "block";
                                } catch (ex) { }
                                var NewPhone = document.getElementById("NewPhone").style.display = "none";

                                if (type) {
                                    try {
                                        var ShowDateTime = document.getElementById("ShowDateTime").style.display = "block";
                                    } catch (ex) { }
                                    var NewDateTime = document.getElementById("newDateTime").style.display = "none";

                                    try {
                                        var ShowSex = document.getElementById("ShowSex").style.display = "block";
                                    } catch (ex) { }
                                    var NewSexBlock = document.getElementById("NewSexBlock").style.display = "none";
                                }

                                try {
                                    var ShowCountryBlock = document.getElementById("ShowCountryBlock").style.display = "block";
                                } catch (ex) { }
                                var ChangeCountryBlock = document.getElementById("ChangeCountryBlock").style.display = "none";

                                try {
                                    var ShowTownBlock = document.getElementById("ShowTownBlock").style.display = "block";
                                } catch (ex) { }
                                var ChangeTownBlock = document.getElementById("ChangeTownBlock").style.display = "none";

                                try {
                                    var ShowAddressBlock = document.getElementById("ShowAddressBlock").style.display = "block";
                                } catch (ex) { }
                                var ChangeAddressBlock = document.getElementById("ChangeAddressBlock").style.display = "none";

                                try {
                                    var ShowPostIndexBlock = document.getElementById("ShowPostIndexBlock").style.display = "block";
                                } catch (ex) { }
                                var ChangePostIndexBlock = document.getElementById("ChangePostIndexBlock").style.display = "none";

                                try {
                                    document.getElementById('ErrorMessage').style.display = "none";
                                } catch (ex) { }

                                var CardHeight = document.getElementById('leftColumn').clientHeight;
                                document.getElementById('map').style.height = String(CardHeight - 55) + "px";
                            }
    </script>
</body>
</html>